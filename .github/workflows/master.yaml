name: Budget-API-Deploy

on:
  push:
    branches: ['master']

jobs:
  tests:
    name: Build and Test
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v3
        with:
          fetch-depth: 2

      - name: Setup Node.js environment
        uses: actions/setup-node@v3
        with:
          node-version: 20
          cache: 'npm'

      - name: Cache node modules
        uses: actions/cache@v3
        with:
          path: src/node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('src/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install dependencies
        run: cd src && npm i

      - name: Unit Test
        run: cd src && npm run unit-tests-ci

  deploy:
    needs: tests
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v3
        with:
          fetch-depth: 2

      - name: Setup Node.js environment
        uses: actions/setup-node@v3
        with:
          node-version: 20
          cache: 'npm'

      - name: Cache CDK node modules
        uses: actions/cache@v3
        with:
          path: ./node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-cdk-node-

      - name: Install CDK dependencies
        run: npm ci

      - name: Cache SRC node modules
        uses: actions/cache@v3
        with:
          path: src/node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('src/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install SRC dependencies
        run: cd src && npm install --production

      - name: Set environment variables
        run: |
          echo "AWS_ACCOUNT=${{ vars.AWS_ACCOUNT }}" >> $GITHUB_ENV
          echo "AWS_DEFAULT_REGION=${{ vars.AWS_DEFAULT_REGION }}" >> $GITHUB_ENV

      - name: Configure aws credentials
        uses: aws-actions/configure-aws-credentials@master
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_KEY }}
          aws-region: ${{ vars.AWS_DEFAULT_REGION }}

      - name: Sinth App
        run: npx cdk synth

      - name: Deploy App
        run: npx cdk deploy --all --require-approval never

